@model AdminViewModel
@{ ViewData["Title"] = "Home Page"; }
@using Microsoft.AspNetCore.Http;


<div>
    <h1 class="display-4 text-center">
        Welcome Admin
    </h1>
    <script src="https://d3js.org/d3.v4.js"></script>
    <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
    <hr />

    <div class="container">
        <div class="row">
            <div class="col text-center">
                <h1>Dashbord</h1>
                <h2>Get Your Status</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="card statistic-card">
                    <div class="card-body">
                        <h4 class="card-title text-center"><strong>@Html.DisplayFor(model => model.SumOfTicketPurchasedThisMonth)</strong></h4>
                        <h6 class="card-subtitle mb-2 text-muted text-center"><strong>Tickets</strong></h6>
                        <p class="card-text text-center">Tickets are purchased this month.</p>
                        <img src="..\css\img\tickets-icon.png" class="img-fluid tickets-icon" alt="...">
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="card statistic-card">
                    <div class="card-body">
                        <h5 class="card-title text-center"><strong>@Html.DisplayFor(model => model.SumOfRevenueThisMonth) NIS</strong></h5>
                        <h6 class="card-subtitle mb-2 text-muted text-center"><strong>Tickets Revenue</strong></h6>
                        <p class="card-text text-center">The revenue from tickets of this month.</p>
                        <img src="..\css\img\currency.png" class="img-fluid currency-icon" alt="...">
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="card statistic-card">
                    <div class="card-body">
                        <h4 class="card-title text-center"><strong>@Html.DisplayFor(model => model.ActiveTrainees)</strong></h4>
                        <h6 class="card-subtitle mb-2 text-muted text-center"><strong>Active Trainees</strong></h6>
                        <p class="card-text text-center">Trainees with active ticket.</p>
                        <img src="..\css\img\user-icon.png" class="img-fluid user-icon" alt="...">
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-sm-6">
                <div id="chart1" class="card graph-card">
                    <div class="card-body">
                        <h4 class="card-title">
                            Occupancy in trainings:
                        </h4>
                        <h6 class="card-subtitle mb-2 text-muted"><strong>Occupancy for the future trainings.</strong> </h6>
                        <div class="card-text">
                            <p><strong class="map-graph-dark-blue">Dark Blue</strong>: The possible amount per training.</p>
                            <p><strong class="map-graph-light-blue">Light Blue</strong>: The actual occupancy per training.</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div id="chart2" class="card graph-card">
                    <div class="card-body">
                        <h4 class="card-title">Bestseller Tickets</h4>
                        <h6 class="card-subtitle mb-2 text-muted"><strong>The most popular ticket at all times.</strong></h6>
                        @*<p class="card-text">.....</p>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <h4>ADVERTISING</h4>
                <a asp-controller="Home" asp-action="Twitter" class="card mb-3 twitter-card" style="max-width: 540px;">
                    <div class="row g-0">
                        <div class="col-md-4">
                            <img src="..\css\img\twitter.jpg" class="img-fluid rounded-start twitter-img" alt="...">
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title">Post a tweet</h5>
                                <p class="card-text">Please share with everyone, advertise your business!</p>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            <!--<div class="col-sm-6">
                <h4>FOR MORE DATA:</h4>
                
                    <div class="center-con btn-body">
                        <div class="round admin-page-double-arrow">
                            <div id="cta">
                                <span class="arrow primera next "></span>
                                <span class="arrow segunda next "></span>-->
                                @*<button class="" type="button" data-toggle="modal" data-target="#exampleModalCenter">
                                </button>*@
                            <!--</div>
                        </div>
                    </div>
                
                
                <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Website Under Construction</h5>
                            </div>
                            <div class="modal-body">
                                Website Still Under Construction, Please try again in the next few days.
                            </div>
                            <div class="modal-footer">
                                <button id="close-modal-double-arrow" type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>-->
        </div>
        <div class="row">
            <div class="col-sm-6">
                <h4>ADD SECTION:</h4>
                <a asp-controller="TrainingTypes" asp-action="Create" class="btn btn-outline-primary btn-lg">New Training Type</a>
                <a asp-controller="Trainers" asp-action="Create" class="btn btn-outline-primary btn-lg">New Trainer</a>
                <a asp-controller="TicketTypes" asp-action="Create" class="btn btn-outline-primary btn-lg">New Ticket Type</a>
            </div>
            <div class="col-sm-6">
                <h4>DETAILS SECTION:</h4>
                <a asp-controller="Tickets" asp-action="Index" class="btn btn-outline-primary btn-lg">Purchased Tickets</a>
                <a asp-controller="Trainers" asp-action="Index" class="btn btn-outline-primary btn-lg">Trainers</a>
                <a asp-controller="TicketTypes" asp-action="Index" class="btn btn-outline-primary btn-lg">Tickets Types</a>
                <a asp-controller="Trainees" asp-action="Index" class="btn btn-outline-primary btn-lg">Trainees</a>
                <a asp-controller="Places" asp-action="Index" class="btn btn-outline-primary btn-lg">Branches</a>
                <a asp-controller="Trainings" asp-action="Index" class="btn btn-outline-primary btn-lg">Trainings</a>
            </div>
        </div>
    </div>
</div>


















































<script>


    // set the dimensions and margins of the graph
    var margin = { top: 30, right: 30, bottom: 70, left: 60 },
        width = 460 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

    // append the svg object to the body of the page
    var svg = d3.select("#chart1")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");

    // Parse the Data
    var data = @Html.Raw(JsonSerializer.Serialize(Model.AllTrainingsBarplot));


        // X axis
        var x = d3.scaleBand()
            .range([0, width])
            .domain(data.map(function (d) { return d.Id; }))
            .padding(0.2);
        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x))
            .selectAll("text")
            .attr("transform", "translate(-10,0)rotate(-45)")
            .style("text-anchor", "end");

        // Add Y axis
        var y = d3.scaleLinear()
            .domain([0, 20])
            .range([height, 0]);
        svg.append("g")
            .call(d3.axisLeft(y));

        // Bars
    svg.selectAll("mybar")
        .data(data)
        .enter()
        .append("rect")
        .attr("x", function (d) { return x(d.Id); })
        .attr("y", function (d) { return y(d.MaxParticipant); })
        .attr("width", x.bandwidth())
        .attr("height", function (d) { return height - y(d.MaxParticipant); })
        .attr("fill", "#191970");

    svg.selectAll("actualbar")
        .data(data)
        .enter()
        .append("rect")
        .attr("x", function (d) { return x(d.Id); })
        .attr("y", function (d) { return y(d.ActualParticipant); })
        .attr("width", x.bandwidth())
        .attr("height", function (d) { return height - y(d.ActualParticipant); })
        .attr("fill", "#1E90FF")




</script>

<script>

    // set the dimensions and margins of the graph
    var margin = { top: 10, right: 30, bottom: 90, left: 40 },
        width = 460 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

    // append the svg object to the body of the page
    var svg = d3.select("#chart2")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");

    // Parse the Data
    var data = @Html.Raw(JsonSerializer.Serialize(Model.TicketsTypesPurchasedLollipop));

        // X axis
        var x = d3.scaleBand()
            .range([0, width])
            .domain(data.map(function (d) { return d.Key; }))
            .padding(1);
        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x))
            .selectAll("text")
            .attr("transform", "translate(-10,0)rotate(-45)")
            .style("text-anchor", "end");




        // Add Y axis
        var y = d3.scaleLinear()
            .domain([0, @Model.TheAmountSellerMostPopularTicktType])
            .range([height, 0]);
        svg.append("g")
            .call(d3.axisLeft(y));

        // Lines
        svg.selectAll("myline")
            .data(data)
            .enter()
            .append("line")
            .attr("x1", function (d) { return x(d.Key); })
            .attr("x2", function (d) { return x(d.Key); })
            .attr("y1", function (d) { return y(d.Value); })
            .attr("y2", y(0))
            .attr("stroke", "grey")

        // Circles
        svg.selectAll("mycircle")
            .data(data)
            .enter()
            .append("circle")
            .attr("cx", function (d) { return x(d.Key); })
            .attr("cy", function (d) { return y(d.Value); })
            .attr("r", "4")
            .style("fill", "#69b3a2")
            .attr("stroke", "black")


</script>

@section Styles {
    <link rel="stylesheet" href="~/css/admin-welcome-page.css" />
    <link rel="stylesheet" href="~/css/double-arrow-button.css" />
}
@section Scripts
{
    <script src="~/js/double-arrow-button.js"></script>
}